<?php
namespace frontend\controllers;

use Yii;
use yii\web\Session;
use yii\base\InvalidParamException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;

use common\models\SysUtils;
use common\models\JsonUtils;
use common\models\UrlUtils;
use common\models\HttpUtils;
use common\models\WechatCallbackapiTest;
use frontend\models\UserService;
use frontend\models\TradeService;


use Head\NetMsg;
use Manager\Cmd;
use Manager\B2M_SearchAccount_Request;
use Manager\M2B_SearchAccount_Response;


/**
 * 用户管理
 */
class UserController extends Controller
{


    	/**
     * 用于微信验证
     *
     * @return array
     */
	public function actionToken(){

		$wechatObj = new WechatCallbackapiTest();
		$wechatObj->valid();
	}

    public function actionGetUserInfo(){
		
		if(isset($_GET['code'])){
			$code = $_GET['code'];
		}else{
			 throw new \Exception("code参数不存在!");
		}
		
        $access_token_info = UserService::getAccessToken(SysUtils::WEIXIN_APP_ID,SysUtils::WEIXIN_SECRET,$code); 
        $access_token = $access_token_info['access_token'];
        $openId = $access_token_info['openid'];
        $wxUserInfo = UserService::getUserInfo($access_token,$openId);
		if($_GET['state']==1){
			return $this->redirect(UrlUtils::createUrl(["apply/go-agent-backend"]));
		}else{
			return $this->redirect(UrlUtils::createUrl(["apply/go-agent-req"]));
		}
        


    }
    /**
     * 获取用户code，并跳转userinfo获取页面
     *
     * @return array
     */
	public function actionGetAuth(){
		if(isset($_GET['a'])){
			$a = $_GET['a'];
		
		}else{
			$a = 1;
		}
		$redirect_uri = urlencode(UrlUtils::createUrl("user/get-user-info"));
		$url = "https://open.weixin.qq.com/connect/oauth2/authorize?appid=".SysUtils::WEIXIN_APP_ID."&redirect_uri=$redirect_uri&response_type=code&scope=snsapi_userinfo&state=$a#wechat_redirect";
		return $this->redirect($url);
	}


   /**
     * 获取账号信息
     */
    public function actionGetAccountInfo(){
        $wxUserInfo = SysUtils::getValueBySessionKey('wxUserInfo');
        if($wxUserInfo !== null){
            $unionid = $wxUserInfo['unionid'];
            $openid = $wxUserInfo['openid'];
        }else{
            Yii::$app->runAction('apply/error');
        }


        $cmd = new Cmd();
        $cmdCode = $cmd::CMD_B2M_SearchAccount_Request;
        //
        $req = new B2M_SearchAccount_Request();
        $headimgurl = $wxUserInfo['headimgurl'];
        $req->setWxUnionid($unionid);
        $req->setWxOpenId($openid);

        //制作消息对象
        $reqMsgStream = HttpUtils::makeNetMsg($req,$cmdCode);
        //发送消息;
        $respMsgStream = HttpUtils::sendNetMsg($reqMsgStream);
        if($respMsgStream === false){

            return json_encode([
                    'retCode' => 1,
                    'retMsg' => '服务器通讯失败'
                ]);
        }
        $resp = new M2B_SearchAccount_Response();
        $errorCode = 0;
        HttpUtils::parseNetMsg($resp,$respMsgStream,$errorCode);
        if($errorCode>0){
             return json_encode([
                    'retCode' => 2,
                    'retMsg' => SysUtils::getErrorMsgByCode($errorCode)
                ]);

        }
        Yii::$app->session->set('actorid',$resp->getActorId());
        $accountInfo = [
            'realname'      => $resp->getRealName(),
            'promotioncode' => $resp->getPromotionCode(),
            'cardcount'     => $resp->getCardCount(),
            'actorid'       => $resp->getActorId(),
            'introducer'    => $resp->getIntroducer(),
            'telephone'     => $resp->getTelephone(),
            'headimgurl'    => $headimgurl
        ];

        return json_encode($accountInfo);
    }





 



  
}
